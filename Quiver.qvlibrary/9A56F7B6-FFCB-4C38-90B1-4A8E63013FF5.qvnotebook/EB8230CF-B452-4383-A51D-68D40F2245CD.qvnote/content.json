{
  "title": "OpenGL ES ",
  "cells": [
    {
      "type": "text",
      "data": "OpenGL(Open Graphics Library)定义了一个跨编程语言、跨平台编程的专业图形程序接口。可用于二维或三维图像的处理与渲染，它是一个功能强大、调用方便的底层图形库。"
    },
    {
      "type": "text",
      "data": "<h3>OpenGL渲染管线</h3>"
    },
    {
      "type": "markdown",
      "data": "* 几何图元：包括点、直线、三角形，均是通过顶点（vertex）来指定的。\n* 模型：根据几何图元创建的物体。\n* 渲染：计算机根据模型创建图像的过程。\n\n最终渲染过程结束之后，人眼所看到的图像就是由屏幕上的所有像素点组成的。\n在内存中，这些像素点可以组织成一个大的一位数组，每4个Byte即标示一个像素点的RGBA数据；\n在显卡中，这些像素点可以组织成帧缓冲区（FrameBuffer）的形式，帧缓冲区保存来图形硬件为了控制屏幕上所有像素的颜色和强度所需要的全部信息。\n\n渲染管线就是OpenGL引擎渲染图像的流程，也就是说OpenGL引擎是一步一步地将图片渲染到屏幕的，分为以下几个阶段：\n\n**阶段一：指定几何对象**\n  \n       几何对象，就是上面说的几何图元，这里将根据具体执行的指令绘制几何图元。\n       比如，OpenGL提供给开发者的绘制方法glDrawArrays，这个方法的第一个参数mode，就是定制绘制方式：\n  * GL_POINTS 绘制点。通常用在绘制粒子效果\n  * GL_LINES  绘制线。通常用在绘制直线\n  * GL_TRIANGLE_STTIP 绘制三角形。所有二维图像点渲染都会使用这种方式。\n  \n\n**阶段二：顶点处理**\n\n**阶段三：图元组装**\n\n**阶段四：栅格化操作**\n\n**阶段五：片元处理**\n\n**阶段六：帧缓冲操作**\n"
    }
  ]
}