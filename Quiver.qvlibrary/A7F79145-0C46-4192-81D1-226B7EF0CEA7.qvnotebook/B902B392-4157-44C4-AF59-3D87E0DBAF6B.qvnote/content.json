{
  "title": "正则表达式",
  "cells": [
    {
      "type": "text",
      "data": "字符是计算机软件处理文字时最基本的单位，可能是字母、数字、标点符号、空格、换行符、汉字等等。正则表达式就是记录文本规则的代码。"
    },
    {
      "type": "text",
      "data": "<h3>正则表达式的元字符</h3>"
    },
    {
      "type": "markdown",
      "data": "代码|说明|反义代码|反义说明\n----|---------|-----|----\n.   |匹配除换行符以外的任意字符|\n\\w  |匹配字母、数字、下划线  |\\W |匹配不是字母、数字、下划线的字符\n\\s  |匹配空白符 | \\S  |匹配不是空白符的字符\n\\d  |匹配数字   | \\D  |匹配非数字的字符\n\\b  |匹配单词的开始或结束 |\\B |匹配不是单词开头或结束的位置\n^   |匹配字符串的开始 |[^x] |匹配除了x以外的任意字符 \n$   |匹配字符串的结束 |"
    },
    {
      "type": "text",
      "data": "<h3>正则表达式的重复</h3>"
    },
    {
      "type": "markdown",
      "data": "代码|说明\n----|---------\n*   |重复零次或多次\n+   |重复一次或多次 \n?   |重复零次或一次\n{n} |重复n次，n为正整数\n{n,}|重复最少n次，n为正整数\n{n,m}|重复n到m次"
    },
    {
      "type": "text",
      "data": "<h3>补充</h3>"
    },
    {
      "type": "text",
      "data": "<b>1.匹配exp后面的位置 : (?&lt;=exp)</b><div>字符串：agent/brand/detail</div><div>结果 &nbsp; &nbsp;：/brand/detail</div><div>表达式：(?&lt;=agent)(/\\w+)+\\b</div><div><b>2.匹配exp前面的位置 ：(?=exp)</b></div><div><div>字符串：agent/brand/detail</div><div>结果 &nbsp; &nbsp;：agent/brand/</div></div><div>表达式：(\\w+/)+(?=detail)<br></div>"
    },
    {
      "type": "text",
      "data": ""
    }
  ]
}